openapi: 3.1.0
info:
  version: 1.0.0
  title: PayU REST
  x-logo:
    url: >-
      https://poland.payu.com/wp-content/themes/global-website/assets/src/images/payu-logo.svg
  description: "# Overview\r\n\r\nWith PayU, you will quickly activate payments on your website or mobile device.\r\n\r\nWe provide a full set of endpoints which allow you to create, capture, cancel and retrieve orders, perform payouts or download reports.\r\n\r\nThe following reference is intended for merchants and developers to facilitate the use of the PayU API. \r\n\r\n## Testing\r\n\r\n### Production environment \r\n\r\nFor a basic integration, including only a redirection to PayU hosted payment page, it is perfectly enough to use the public test point of sale. However, if you would like to test a full set of endpoints, including e.g. refunds, consider registering for a sandbox account.\r\n\r\n__Public test POS (point of sale)__\r\n\r\n| Key name                       | Value                            |\r\n|--------------------------------|---------------------------------:|\r\n| POS ID (pos_id)                | 145227                           |\r\n| OAuth protocol - client_id     | 145227                           |\r\n| Second key (MD5)               | 13a980d4f851f3d9a1cfc792fb1f5e50 |\r\n| OAuth protocol - client_secret | 12f071174cb7eb79d4aac5bc2f07563f |\r\n\r\n\r\n### Sandbox environment\r\n\r\nSandbox is an almost identical copy of PayU production system. It can be used for integration and testing purposes.\r\n\r\n__Public test POS (point of sale)__\r\n\r\nAlthough it is best to __<a href=\"https://registration-merch-prod.snd.payu.com/boarding/#/registerSandbox/\" target=\"_blank\">create your own account</a>__ to later be able to configure it as needed, you may also use a public sandbox test POS without registering:\r\n\r\n| Key name                       | Value                            |\r\n|--------------------------------|---------------------------------:|\r\n| POS ID (pos_id)                | 300746                           |\r\n| OAuth protocol - client_id     | 300746                           |\r\n| Second key (MD5)               | b6ca15b0d1020e8094d9b5f8d163db54 |\r\n| OAuth protocol - client_secret | 2ee86a66e5d97e3fadc400c9f19b065d |\r\n\r\nThe availability of the sandbox environment can be checked on the __<a href=\"https://status.snd.payu.com/\" target=\"_blank\">Status page</a>__.\r\n\r\n__Testing card payments__\r\n\r\nIn order to test card payments on sandbox, please use credentials displayed on the __<a href=\"https://developers.payu.com/en/overview.html#sandbox\" target=\"_blank\">Overview</a>__ documentation page.\r\n\r\n\r\n\r\n"
servers:
  - url: https://secure.payu.com
    description: Production Server
  - url: https://secure.snd.payu.com
    description: Sandbox Test Server
paths:
  /pl/standard/user/oauth/authorize:
    post:
      tags:
        - Authorize payment
      summary: Create OAuth token
      description: >
        You authenticate with OAuth standard by obtaining a token, which is used
        for further communication with PayU servers. You can view authorization
        data from the management panel.


        Each payment should be authorized in one of two available modes: 

        - <code>client_credentials</code> for standard integration,

        - <code>trusted_merchant</code> used for authentication of requests made
        for logged-in shop/application users with fixed
        <code>extCustomerId</code>.


        Generated access token is valid for 43199 seconds.
      operationId: oauth
      parameters:
        - name: grant_type
          in: query
          description: Authorization mode.
          required: true
          schema:
            type: string
            enum:
              - client_credentials
              - trusted_merchant
        - name: client_id
          in: query
          description: >-
            Merchant's POS identifier in PayU's system. Can be found in PayU's
            merchant panel.
          required: true
          schema:
            type: string
        - name: client_secret
          in: query
          description: Merchant's secret key. Can be found in PayU's merchant panel.
          required: true
          schema:
            type: string
        - name: email
          in: query
          description: >-
            Customer's email address in merchant's system. __Required and used
            only in <code>trusted_merchant</code>__.
          required: true
          schema:
            type: string
        - name: extCustomerId
          in: query
          description: >-
            Customer's identifier in the merchant's system. __Required and used
            only in <code>trusted_merchant</code>__.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: Token used for authentication of API calls.
                    format: uuid
                  token_type:
                    type: string
                    enum:
                      - bearer
                  refresh_token:
                    type: string
                    format: uuid
                  expires_in:
                    type: integer
                    description: Token expiration time (in seconds).
                    enum:
                      - 43199
                  grant_type:
                    type: string
                    description: Token authentication mode.
                    enum:
                      - client_credentials
                      - trusted_merchant
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                  - error_description
                properties:
                  error:
                    type: string
                    description: Cause of the error.
                  error_description:
                    type: string
                    description: Error description.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                  - error_description
                properties:
                  error:
                    type: string
                    description: Cause of the error.
                  error_description:
                    type: string
                    description: Error description.
  /api/v2_1/orders:
    post:
      tags:
        - Payment
      summary: Creating new order.
      description: OrderCreateRequest
      operationId: orderCreateRequest
      security:
        - OAuth token: []
      parameters:
        - name: Content-Type
          in: header
          description: Content type
          required: true
          schema:
            type: string
          style: simple
          example: application/json
        - name: Authorization
          in: header
          description: Auth token
          required: true
          schema:
            type: string
          style: simple
          example: Bearer 3e5cac39-7e38-4139-8fd6-30adc06a61bd
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - customerIp
                - merchantPosId
                - description
                - currencyCode
                - totalAmount
                - products
              properties:
                extOrderId:
                  type: string
                  description: >-
                    ID of an order used in merchant system. Order identifier
                    assigned by the merchant. It enables merchants to find a
                    specific order in their system. This value must be unique
                    within a single POS.
                notifyUrl:
                  type: string
                  description: The address for sending notifications
                  examples:
                    - www.notify.com
                customerIp:
                  type: string
                  description: >-
                    Payerâ€™s IP address, e.g. 123.123.123.123. Note: 0.0.0.0 is
                    not accepted.
                  examples:
                    - 127.0.0.1
                merchantPosId:
                  type: string
                  description: Point of sale ID.
                  examples:
                    - '140332'
                validityTime:
                  type: string
                  description: >-
                    Duration for the validity of an order (in seconds), during
                    which time payment must be made. Default value 86400.
                  example: '100000'
                description:
                  type: string
                  description: Description of the order.
                additionalDescription:
                  type: string
                  description: Additional description of the order.
                visibleDescription:
                  type: string
                  maxLength: 80
                  description: ext visible on the PayU payment page.
                statementDescription:
                  type: string
                  maxLength: 22
                  description: >-
                    Payment recipient name followed by payment description
                    (order ID, ticket number etc) visible on card statement. The
                    name should be easy to recognize by the cardholder. If field
                    is not provided, static name configured by PayU will be
                    used.
                currencyCode:
                  type: string
                  description: Currency code compliant with ISO 4217 (e.g EUR).
                  examples:
                    - EUR
                totalAmount:
                  type: string
                  description: >-
                    Total price of the order in pennies (e.g. 1000 is 10.00
                    EUR). Applies also to currencies without subunits (e.g. 1000
                    is 10 HUF).
                  example: '1000'
                cardOnFile:
                  type: string
                  description: description cardOnFile
                  enum:
                    - FIRST
                    - STANDARD_CARDHOLDER
                    - STANDARD_MERCHANT
                recurring:
                  type: string
                  description: description recurring
                  enum:
                    - FIRST
                    - STANDARD
                continueUrl:
                  type: string
                  description: >-
                    Address for redirecting the customer after payment is
                    commenced.
                  examples:
                    - www.example.com/path
                buyer:
                  $ref: '#/components/schemas/Buyer'
                products:
                  $ref: '#/components/schemas/Products'
                payMethods:
                  type: object
                  description: >-
                    Section containing data of the ordered products. Section
                    products is an array of objects of type product.
                  properties:
                    payMethod:
                      type: object
                      required:
                        - type
                        - value
                      properties:
                        type:
                          type: string
                          description: Payment method type.
                          enum:
                            - PBL
                            - CARD_TOKEN
                            - PAYMENT_WALL
                        value:
                          type: string
                          description: Payment type for PBL, CARD_TOKEN.
                          example: c
                        authorizationCode:
                          type: string
                          description: >-
                            Optional, usage differs depending on payment method.
                            For BLIK integrated transparently: enables to
                            collect 6-digit BLIK code on your website instead of
                            redirecting to BLIK.
                          example: '777123'
                        specificData:
                          type: array
                          items:
                            type: object
                mcpData:
                  type: object
                  description: >-
                    Section allows to pass currency conversion details if you
                    chose to use Multi-Currency Pricing.
                  required:
                    - mcpCurrency
                    - mcpAmount
                    - mcpRate
                    - mcpFxTableId
                    - mcpPartnerId
                  properties:
                    mcpCurrency:
                      type: string
                      description: termCurrency from the rate table.
                    mcpAmount:
                      type: string
                      description: baseCurrency amount converted to termCurrency.
                    mcpRate:
                      type: string
                      description: Applied conversion rate.
                    mcpFxTableId:
                      type: string
                      description: Applied FX rate table id.
                    mcpPartnerId:
                      type: string
                      description: Id provided by PayU.
                threeDsAuthentication:
                  type: object
                  description: >-
                    Contains optional fields required by 3DS 2 authentication
                    protocol.
                  required:
                    - sdk
                  properties:
                    challangeRequested:
                      type: string
                      description: >-
                        Merchant's preference regarding 3DS 2 challenge.
                        Exclusive with exemption. Maybe overridden by PayU
                      enum:
                        - 'YES'
                        - 'NO'
                        - MANDATE
                    exemption:
                      type: object
                      required:
                        - value
                        - rejectionHandling
                      description: >-
                        Merchant's preference regarding SCA exemption to be used
                        to exempt card payment from 3DS authentication.
                        Exclusive with challengeRequested. Requires additional
                        configuration to be enabled
                      properties:
                        value:
                          type: string
                          description: >-
                            Either LOW_RISK (also known as TRA - transaction
                            risk analysis compliant with SCA requirements has
                            been performed by the merchant) or LOW_VALUE (low
                            value payment, up to 30 EUR or equivalent in other
                            currency).
                          enum:
                            - LOW_RISK
                            - LOW_VALUE
                        rejectionHandling:
                          type: string
                          description: >-
                            Either PERFORM_AUTHENTICATION (PayU will return
                            response with WARNING_CONTINUE_3DS and redirection
                            URL code if exemption cannot be applied) or DECLINE
                            (PayU will decline the payment if exemption cannot
                            be applied - error message will be returned
                            synchronously in OrderCreateResponse)
                          enum:
                            - PERFORM_AUTHENTICATION
                            - DECLINE
                        riskScore:
                          type: string
                          maxLength: 128
                          description: >-
                            Risk score assigned by merchant's antifraud tool.
                            For informative purposes only.
                credit:
                  type: object
                  description: >-
                    Section containing credit data. This information is not
                    required, but it is strongly recommended to include it.
                    Otherwise the buyer will be prompted to provide missing data
                    on provider page when payment by Installments or Pay later.
                  properties:
                    shoppingCarts:
                      type: array
                      description: >-
                        Section containing data of the ordered products. Section
                        <credit.shoppingCarts> is an array of objects of type
                        shoppingCart.
                      items:
                        type: object
                        properties:
                          shippingMethod:
                            type: object
                            description: >-
                              Section containing data of shipping method.
                              Section <shippingMethod> is a single object of
                              type shippingMethod.
                            properties:
                              type:
                                type: string
                                description: Type of shipment
                                enum:
                                  - COURIER
                                  - COLLECTION_POINT_PICKUP
                                  - PARCEL_LOCKER
                                  - STORE_PICKUP
                              price:
                                type: string
                                description: Shipping cost
                              address:
                                type: object
                                description: >-
                                  Section containing data about shipping
                                  address. Section <shippingMethod.address> is a
                                  single object of type address
                                properties:
                                  pointId:
                                    type: string
                                    description: >-
                                      The full name of the pickup point,
                                      including its unique identifier.
                                    example: Parcel locker POZ29A
                                  street:
                                    type: string
                                    description: >-
                                      Street name, possibly including house and
                                      flat number.
                                  streetNo:
                                    type: string
                                    description: Street number
                                  flatNo:
                                    type: string
                                    description: Flat number
                                  postalCode:
                                    type: string
                                    description: Postal Code
                                  city:
                                    type: string
                                    description: City
                                  countryCode:
                                    type: string
                                    description: >-
                                      Two-letter country code compliant with
                                      ISO-3166.
                          products:
                            type: array
                            description: >-
                              Section containing data about ordered products.
                              Section <products> is an array of objects of type
                              product.
                            required:
                              - name, unitPrice, quantity
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: Name of the product
                                unitPrice:
                                  type: string
                                  description: Unit price
                                quantity:
                                  type: string
                                  description: Quantity
                                virtual:
                                  type: boolean
                                  enum:
                                    - true
                                    - false
                                  description: >-
                                    Product type, which can be virtual or
                                    material.
                                  example: true
                          extCustomerId:
                            type: string
                            description: >-
                              Submerchant identifier. This field should be
                              consistent with field extCustomerId in
                              shoppingCarts section when order is placed in
                              marketplace.
                    applicant:
                      type: object
                      description: Section containing data of person applying for a credit.
                      properties:
                        email:
                          type: string
                          description: Applicantâ€™s email address
                        phone:
                          type: string
                          description: Applicantâ€™s phone number
                        firstName:
                          type: string
                          description: Applicantâ€™s first name
                        lastName:
                          type: string
                          description: Applicantâ€™s last name
                        language:
                          type: string
                          description: >-
                            Language code, ISO-639-1 compliant. Denotes the
                            language version of PayU hosted payment page and of
                            e-mail messages sent from PayU to the payer.
                        nin:
                          type: string
                          description: National Identification Number
                        address:
                          type: object
                          description: Section containing data about applicantâ€™s address.
                          properties:
                            street:
                              type: string
                              description: >-
                                Street name, possibly including house and flat
                                number.
                            streetNo:
                              type: string
                              description: Street number
                            flatNo:
                              type: string
                              description: Flat number
                            postalCode:
                              type: string
                              description: Postal Code
                            city:
                              type: string
                              description: City
                            countryCode:
                              type: string
                              description: Two-letter country code compliant with ISO-3166.
                        additionalInfo:
                          type: object
                          description: >-
                            Additional information about person applying for
                            credit.
                          properties:
                            hasSuccessfullyFinishedOrderInShop:
                              type: string
                              description: >-
                                Information whether there were previous,
                                successfully completed orders for applicant.
        description: Parameters for OrderCreateRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      statusCode:
                        type: string
                        description: Response code
                  redirectUri:
                    type: string
                  orderId:
                    type: string
                  extOrderId:
                    type: string
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      statusCode:
                        type: string
                  redirectUri:
                    type: string
                  orderId:
                    type: string
                  extOrderId:
                    type: string
        '302':
          description: Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      statusCode:
                        type: string
                        description: Payment status.
                      severity:
                        type: string
                  redirectUri:
                    type: string
                    description: Url redirection address with payment summary.
                  iframeAllowed:
                    type: boolean
                    example: true
                  threeDsProtocolVersion:
                    type: string
                    enum:
                      - 3DS
                      - 3DS2
                  orderId:
                    type: string
                    description: Order identifier given by PayU
                  payMethods:
                    type: object
                    properties:
                      card:
                        type: object
                        properties:
                          number:
                            type: string
                            description: Card number.
                          expirationMonth:
                            type: integer
                            description: Card expiration month.
                          expirationYear:
                            type: integer
                            description: Card expiration year.
                      type:
                        type: string
                      value:
                        type: string
                  extOrderId:
                    type: string
                    description: Order identifier given by merchant.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      statusCode:
                        type: string
                        description: Error type.
                      severity:
                        type: string
                      code:
                        type: string
                        description: Identification code of specific error.
                      codeLiteral:
                        type: string
                        description: Cause of the error.
                      statusDesc:
                        type: string
                        description: Error description.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      statusCode:
                        type: string
                        description: Error type.
                      code:
                        type: string
                        description: Identification code of specific error.
                      codeLiteral:
                        type: string
                        description: Cause of the error.
                      statusDesc:
                        type: string
                        description: Error description.
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      statusCode:
                        type: string
                        description: Error type.
                      code:
                        type: string
                        description: Identification code of specific error.
                      codeLiteral:
                        type: string
                        description: Cause of the error.
                      statusDesc:
                        type: string
                        description: Error description.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      statusCode:
                        type: string
                        description: Error type.
                      codeLiteral:
                        type: string
                        description: Cause of the error.
                      statusDesc:
                        type: string
                        description: Error description.
  /api/v2_1/orders/{orderId}:
    get:
      tags:
        - Payment
      operationId: orderId
      summary: Retrieve order data
      security:
        - OAuth token: []
      parameters:
        - name: orderId
          in: path
          example: WZHF5FFDRJ140731GUEST000P01
          description: Order ID generated by the PayU system
          required: true
          content:
            application/json:
              schema:
                type: string
        - name: Content-Type
          in: header
          description: Content type
          required: true
          schema:
            type: string
          style: simple
          example: application/json
        - name: Authorization
          in: header
          description: Auth token
          required: true
          schema:
            type: string
          style: simple
          example: Bearer 3e5cac39-7e38-4139-8fd6-30adc06a61bd
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    description: Array of order objects.
                    items:
                      type: object
                      properties:
                        orderId:
                          type: string
                          description: Order ID generated by the PayU system.
                          example: '{orderId}'
                        extOrderId:
                          type: string
                          description: External order ID (assigned by the shop).
                          example: '343242'
                        orderCreateDate:
                          type: string
                          description: Order creation timestamp.
                          example: '2014-10-27T14:58:17.443+01:00'
                        notifyUrl:
                          type: string
                          description: Address for sending notifications.
                          example: http://localhost/OrderNotify/
                        customerIp:
                          type: string
                          description: >-
                            Customer's IP address. Note: 0.0.0.0 is not
                            accepted.
                          example: 127.0.0.1
                        merchantPosId:
                          type: string
                          description: Point of sale ID.
                          example: '145227'
                        description:
                          type: string
                          description: Description for order.
                          example: New Order
                        validityTime:
                          type: string
                          description: >-
                            Duration for the validity of an order (in seconds),
                            during which time payment must be made.
                          default: '86400'
                        currencyCode:
                          type: string
                          description: Currency code compliant with ISO 4217.
                          example: PLN
                        totalAmount:
                          type: string
                          description: Total price of the order.
                          example: '3200'
                        buyer:
                          $ref: '#/components/schemas/Buyer'
                        payMethod:
                          type: object
                          description: Used payment method.
                          properties:
                            amount:
                              type: string
                              description: Order amount.
                            type:
                              type: string
                              description: Payment method code.
                        status:
                          type: string
                          description: Order status.
                        products:
                          $ref: '#/components/schemas/Products'
                  status:
                    $ref: '#/components/schemas/Status'
                  properties:
                    $ref: '#/components/schemas/Properties'
        '400':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      statusCode:
                        type: string
                        example: ERROR
                  redirectUri:
                    type: string
                    example: '{payment_summary_redirection_url}'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      statusCode:
                        type: string
                        description: Error type.
                      severity:
                        type: string
                      statusDesc:
                        type: string
                        description: Error description.
    delete:
      tags:
        - Payment
      summary: Cancel waiting order.
      description: Cancel order
      operationId: orderCancel
      security:
        - OAuth token: []
      parameters:
        - name: orderId
          in: path
          example: WZHF5FFDRJ140731GUEST000P01
          description: Order ID generated by the PayU system
          required: true
          content:
            application/json:
              schema:
                type: string
        - name: Content-Type
          in: header
          description: Content type
          required: true
          schema:
            type: string
          style: simple
          example: application/json
        - name: Authorization
          in: header
          description: Auth token
          required: true
          schema:
            type: string
          style: simple
          example: Bearer 3e5cac39-7e38-4139-8fd6-30adc06a61bd
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: string
                    description: Order identifier in PayU's system.
                  extOrderId:
                    type: string
                    description: Order identifier in merchant's system.
                  status:
                    type: object
                    properties:
                      statusCode:
                        type: string
                        description: Status after update.
                        example: SUCCESS
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      statusCode:
                        type: string
                        description: Error type.
                      code:
                        type: string
                        description: Identification code of specific error.
                      codeLiteral:
                        type: string
                        description: Cause of the error.
                      statusDesc:
                        type: string
                        description: Error description.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      statusCode:
                        type: string
                        description: Error type.
                      severity:
                        type: string
                      statusDesc:
                        type: string
                        description: Error description.
  /api/v2_1/orders/{orderId}/status:
    put:
      tags:
        - Payment
      summary: Complete waiting order.
      description: Capture order
      operationId: orderCapture
      security:
        - OAuth token: []
      parameters:
        - name: orderId
          in: path
          example: WZHF5FFDRJ140731GUEST000P01
          description: Order ID generated by the PayU system
          required: true
          content:
            application/json:
              schema:
                type: string
        - name: Content-Type
          in: header
          description: Content type
          required: true
          schema:
            type: string
          style: simple
          example: application/json
        - name: Authorization
          in: header
          description: Auth token
          required: true
          schema:
            type: string
          style: simple
          example: Bearer 3e5cac39-7e38-4139-8fd6-30adc06a61bd
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - orderId
                - orderStatus
              properties:
                orderId:
                  type: string
                  description: Identifier of the order you want to update.
                orderStatus:
                  type: string
                  description: Status of the order after update.
                  example: COMPLETED
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      statusCode:
                        type: string
                        description: Status after update.
                        example: SUCCESS
                      statusDesc:
                        type: string
                        description: Status message.
                        example: Status was updated
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      statusCode:
                        type: string
                        description: Error type.
                      code:
                        type: string
                        description: Identification code of specific error.
                      codeLiteral:
                        type: string
                        description: Cause of the error.
                      statusDesc:
                        type: string
                        description: Error description.
  /api/v2_1/orders/{orderId}/refunds:
    post:
      tags:
        - Refund
      summary: Creating refund.
      description: Create a refund
      operationId: createARefund
      security:
        - OAuth token: []
      parameters:
        - name: orderId
          in: path
          example: WZGF5FFDRJ140731GUEST000P01
          description: Order ID generated by the PayU system
          required: true
          schema:
            type: string
          content:
            application/json:
              schema:
                type: string
        - name: Content-Type
          in: header
          description: Content type
          required: true
          schema:
            type: string
          style: simple
          example: application/json
        - name: Authorization
          in: header
          description: Auth token
          required: true
          schema:
            type: string
          style: simple
          example: Bearer 3e5cac39-7e38-4139-8fd6-30adc06a61bd
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - refund
              properties:
                refund:
                  type: object
                  required:
                    - description
                  description: Contains detailed information about a refund.
                  properties:
                    description:
                      type: string
                      description: Refund description
                    amount:
                      type: string
                      description: >-
                        Amount of the refund. If this is left blank, all funds
                        will be returned to the buyer.
                      example: '10000'
                    extRefundId:
                      type: string
                      description: External refund ID.
                    currencyCode:
                      type: string
                      description: Currency code compliant with ISO 4217.
                      example: PLN
                    bankDescription:
                      type: string
                      description: Bank operation description.
                    type:
                      type: string
                      description: Operation type.
                      enum:
                        - REFUND_PAYMENT_STANDARD
                      example: REFUND_PAYMENT_STANDARD
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: string
                    description: ID of refunded order.
                  refund:
                    type: object
                    description: Refund details.
                    properties:
                      description:
                        type: string
                        description: Refund description
                      amount:
                        type: string
                        description: >-
                          Amount of the refund. If this is left blank, all funds
                          will be returned to the buyer.
                        example: '10000'
                      extRefundId:
                        type: string
                        description: External refund ID.
                      currencyCode:
                        type: string
                        description: Currency code compliant with ISO 4217.
                        example: PLN
                      bankDescription:
                        type: string
                        description: Bank operation description.
                      creationDateTime:
                        type: string
                        description: Date of refund creation.
                        example: '2020-07-02T09:19:03.896+02:00'
                      status:
                        type: string
                        description: Refund status code.
                        enum:
                          - PENDING
                          - CANCELED
                          - FINALIZED
                      statusDatetime:
                        type: string
                        description: Timestamp of the status.
                        example: '2020-07-02T09:19:04.013+02:00'
                  status:
                    type: object
                    properties:
                      statusCode:
                        type: string
                        description: Status of the refund.
                      statusDesc:
                        type: string
                        description: Description og given status.
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      statusCode:
                        type: string
                        description: Error type.
                      severity:
                        type: string
                      code:
                        type: string
                        description: Identification code of specific error.
                      codeLiteral:
                        type: string
                        description: Cause of error.
                      statusDesc:
                        type: string
                        description: Error description.
    get:
      tags:
        - Refund
      summary: Retrieve all refunds for the specific orderId
      operationId: orderRefunds
      security:
        - OAuth token: []
      parameters:
        - name: orderId
          in: path
          example: WZHF5FFDRJ140731GUEST000P01
          description: Order ID generated by the PayU system
          required: true
          schema:
            type: string
          content:
            application/json:
              schema:
                type: string
        - name: Content-Type
          in: header
          description: Content type
          required: true
          schema:
            type: string
          style: simple
          example: application/json
        - name: Authorization
          in: header
          description: Auth token
          required: true
          schema:
            type: string
          style: simple
          example: Bearer 3e5cac39-7e38-4139-8fd6-30adc06a61bd
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  refunds:
                    type: array
                    items:
                      type: object
                      properties:
                        refundId:
                          type: string
                          description: ID of the refund
                        extRefundId:
                          type: string
                          description: External refund ID.
                        amount:
                          type: string
                          description: >-
                            Amount of the refund. If this is left blank, all
                            funds will be returned to the buyer.
                        description:
                          type: string
                          description: Refund description
                        creationDateTime:
                          type: string
                          description: Date of refund creation.
                          example: '2020-07-02T09:19:03.896+02:00'
                        currencyCode:
                          type: string
                          description: Currency code compliant with ISO 4217.
                        statusDatetime:
                          type: string
                          description: Timestamp of the status.
                          example: '2020-07-02T09:19:04.013+02:00'
                        status:
                          type: string
                          description: Refund status code.
                          enum:
                            - PENDING
                            - CANCELED
                            - FINALIZED
        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      statusCode:
                        type: string
                        description: Error type.
                      severity:
                        type: string
                      statusDesc:
                        type: string
                        description: Error description.
  /api/v2_1/orders/{orderId}/refunds/{refundId}:
    get:
      tags:
        - Refund
      summary: Retrieve specific refund data
      operationId: orderRefund
      security:
        - OAuth token: []
      parameters:
        - name: orderId
          in: path
          example: WZHF5FFDRJ140731GUEST000P01
          description: Order ID generated by the PayU system
          required: true
          schema:
            type: string
          content:
            application/json:
              schema:
                type: string
        - name: refundId
          in: path
          example: '5000000142'
          description: Refund identifier in the PayU system.
          required: true
          schema:
            type: string
          content:
            application/json:
              schema:
                type: string
        - name: Content-Type
          in: header
          description: Content type
          required: true
          schema:
            type: string
          style: simple
          example: application/json
        - name: Authorization
          in: header
          description: Auth token
          required: true
          schema:
            type: string
          style: simple
          example: Bearer 3e5cac39-7e38-4139-8fd6-30adc06a61bd
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                discriminator:
                  propertyName: status
                  mapping:
                    FINALIZED: '#/components/schemas/refundRetrieveFinalized'
                    PENDING: '#/components/schemas/refundRetrievePending'
                    CANCELED: '#/components/schemas/refundRetrieveCanceled'
                anyOf:
                  - $ref: '#/components/schemas/refundRetrieveFinalized'
                  - $ref: '#/components/schemas/refundRetrievePending'
                  - $ref: '#/components/schemas/refundRetrieveCanceled'
        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: object
                    properties:
                      statusCode:
                        type: string
                        description: Error type.
                      severity:
                        type: string
                      statusDesc:
                        type: string
                        description: Error description.
components:
  securitySchemes:
    OAuth token:
      type: apiKey
      name: Authorization
      in: header
      description: >-
        Authorization token generated using client_secret key from the merchant
        panel.
  schemas:
    BuyerDelivery:
      type: object
      description: >-
        Section containing delivery address. For a list of parameters, see
        section delivery
      properties:
        street:
          type: string
          description: Full street address, incl. apartment number.
        postalBox:
          type: string
          description: Postal box
        postalCode:
          type: string
          description: Postal code
        city:
          type: string
          description: city
        state:
          type: string
          description: >-
            Country principal subdivision like "state" or "province". If
            provided, must be a valid ISO 3166-2 code (e.g. "UT" for Utah in the
            USA or "30" for "Wielkopolskie" in Poland).
          example: '30'
        countryCode:
          type: string
          description: Two-letter country code compliant with ISO-3166.
        name:
          type: string
          description: Address description
        recipientName:
          type: string
          description: Recipient name
        recipientEmail:
          type: string
          description: Ecipient email
        recipientPhone:
          type: string
          description: Recipient phone number
    Buyer:
      type: object
      description: Section containing buyer data.
      properties:
        customerId:
          type: string
          description: ID of the customer used in merchant system
        email:
          type: string
          description: Buyer's email address.
          example: email@email.com
        phone:
          type: string
          description: >-
            Buyer's telephone number. Please use +[country code] [number]
            format.
          example: +48 225108001
        firstName:
          type: string
          description: Buyer's first name.
          example: John
        lastName:
          type: string
          description: Buyer's last name
          example: Doe
        nin:
          type: string
          description: National Identification Number
        language:
          type: string
          description: >-
            Language code, ISO-639-1 compliant. Denotes the language version of
            PayU hosted payment page and of e-mail messages sent from PayU to
            the payer.
          example: pl
          enum:
            - pl
            - en
            - cs
            - bg
            - da
            - de
            - el
            - es
            - et  fi
            - fr
            - hr
            - hu
            - it
            - lt
            - lv
            - nl
            - pt
            - ro
            - ru
            - sk
            - sl
            - sr
            - sv
            - tr
            - uk
        delivery:
          $ref: '#/components/schemas/BuyerDelivery'
    Products:
      type: array
      description: >-
        Section containing data of the ordered products. Section products is an
        array of objects of type product.
      required:
        - name, unitPrice, quantity
      items:
        type: object
        properties:
          name:
            type: string
            description: Name of the product
            example: Wireless Mouse for Laptop
          unitPrice:
            type: string
            description: Unit price
            example: '15000'
          quantity:
            type: string
            description: Quantity
            example: '1'
          virtual:
            type: boolean
            enum:
              - true
              - false
            description: Product type, which can be virtual or material.
            example: true
          listingDate:
            type: string
            description: >-
              Marketplace date from which the product (or offer) is available,
              ISO format applies.
            example: '2019-03-27T10:57:59.000+01:00'
    Status:
      type: object
      properties:
        statusCode:
          type: string
          description: Response code
        statusDesc:
          type: string
          description: Response status description
    Properties:
      type: array
      description: Array of objects related to transaction identification.
      items:
        type: object
        properties:
          name:
            type: string
            description: >-
              Static value. The payment identifier, displayed on transaction
              statements as "Trans ID" and within the transaction search option
              in the Management Panel.
            example: PAYMENT_ID
          value:
            type: string
            description: Transaction ID in PayU system.
            example: '1234567890'
    refundRetrieveFinalized:
      type: object
      properties:
        refundId:
          type: string
          description: ID of the refund
          example: '5000000142'
        extRefundId:
          type: string
          description: External refund ID.
          example: hdjJduUEEH2
        amount:
          type: string
          description: >-
            Amount of the refund. If this is left blank, all funds will be
            returned to the buyer.
          example: 10000
        description:
          type: string
          description: Refund description
          example: Refund for order <orderId>
        creationDateTime:
          type: string
          description: Date of refund creation.
          example: '2020-07-02T09:19:03.896+02:00'
        currencyCode:
          type: string
          description: Currency code compliant with ISO 4217.
        statusDatetime:
          type: string
          description: Timestamp of the status.
          example: '2020-07-02T09:19:04.013+02:00'
        status:
          type: string
          description: Refund status code.
          example: FINALIZED
    refundRetrievePending:
      type: object
      properties:
        refundId:
          type: string
          description: ID of the refund
          example: '5000000142'
        extRefundId:
          type: string
          description: External refund ID.
          example: hdjJduUEEH2
        amount:
          type: string
          description: >-
            Amount of the refund. If this is left blank, all funds will be
            returned to the buyer.
          example: 10000
        description:
          type: string
          description: Refund description
          example: Refund for order <orderId>
        creationDateTime:
          type: string
          description: Date of refund creation.
          example: '2020-07-02T09:19:03.896+02:00'
        currencyCode:
          type: string
          description: Currency code compliant with ISO 4217.
        statusDatetime:
          type: string
          description: Timestamp of the status.
          example: '2020-07-02T09:19:04.013+02:00'
        status:
          type: string
          description: Refund status code.
          example: PENDING
    refundRetrieveCanceled:
      type: object
      properties:
        refundId:
          type: string
          description: ID of the refund
          example: '5000000142'
        extRefundId:
          type: string
          description: External refund ID.
          example: hdjJduUEEH2
        amount:
          type: string
          description: >-
            Amount of the refund. If this is left blank, all funds will be
            returned to the buyer.
          example: 10000
        description:
          type: string
          description: Refund description
          example: Refund for order <orderId>
        creationDateTime:
          type: string
          description: Date of refund creation.
          example: '2020-07-02T09:19:03.896+02:00'
        currencyCode:
          type: string
          description: Currency code compliant with ISO 4217.
        statusDatetime:
          type: string
          description: Timestamp of the status.
          example: '2020-07-02T09:19:04.013+02:00'
        status:
          type: string
          description: Refund status code.
          example: CANCELED
        statusError:
          type: object
          description: Information about error.
          properties:
            code:
              type: string
              description: Error type.
              example: PROVIDER_TECHNICAL_ERROR
            description:
              type: string
              description: Error information.
              example: Temporary problem on Provider Side.
    refundRetrieveFInalized:
      type: object
      properties:
        refundId:
          type: string
          description: ID of the refund
          example: '5000000142'
        extRefundId:
          type: string
          description: External refund ID.
          example: hdjJduUEEH2
        amount:
          type: string
          description: >-
            Amount of the refund. If this is left blank, all funds will be
            returned to the buyer.
          example: 10000
        description:
          type: string
          description: Refund description
          example: Refund for order <orderId>
        creationDateTime:
          type: string
          description: Date of refund creation.
          example: '2020-07-02T09:19:03.896+02:00'
        currencyCode:
          type: string
          description: Currency code compliant with ISO 4217.
        statusDatetime:
          type: string
          description: Timestamp of the status.
          example: '2020-07-02T09:19:04.013+02:00'
        status:
          type: string
          description: Refund status code.
          example: FINALIZED
